## keybindings
unbind C-b
unbind C-a
unbind %

set-option -g prefix C-a
set-window-option -g mode-keys vi

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key C-a    last-window
bind-key v      split-window -h
bind-key s      split-window -v
bind-key C-h    send-key C-h

bind-key -r C-h    resize-pane -L 5
bind-key -r C-l    resize-pane -R 5
bind-key -r C-j    resize-pane -D 5
bind-key -r C-k    resize-pane -U 5

bind-key r      source-file ~/.tmux.conf \; display-message "tumx.conf reloaded!!"
bind-key R      refresh-client
bind-key a      send-key C-a

# change panes to equal size
bind-key | choose-buffer
bind-key = select-layout tiled

# set color to 256
set -g default-terminal "screen-256color"

## set status bar
#set-option -g status-utf8 on
set-option -g status-bg colour11
set-option -g status-fg colour8

set-window-option -g window-status-current-fg colour16
set-window-option -g window-status-current-attr bold
#set-window-option -g window-status-current-format ' #I #W '

## set window notifications
set-option -g visual-activity on
#set-option -g visual-content on
set-window-option -g monitor-activity on
set-window-option -g automatic-rename off
set-option -g allow-rename off
#set-window-option -g automatic-rename on

# set the base index to 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# disable mouse
set-option -g mouse off

set-option -g history-limit 20000


## vi key for copy mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-key -X begin-selection
bind-key -T copy-mode-vi C-v send-key -X rectangle-toggle
#bind-key -t vi-copy y Enter
#bind-key -t vi-copy y copy-pipe "~/work/Doit/doit/doitclient wclip"
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "~/work/Doit/doit/doitclient wclip"
#bind -t vi-copy C-c copy-pipe 'xclip -in -selection clipboard'
#bind -t vi-copy y copy-selection \; copy-pipe 'xclip -in -selection clipboard'

# temporarily disbaled
#bind -T copy-mode-vi y send-key -X copy-pipe 'xclip -in -selection clipboard' \; send-key -X copy-selection

bind -T copy-mode-vi y send-key -X copy-selection

#bind -n C-v run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
#set M-c to start the search
bind -T root M-c copy-mode \; command-prompt -p "Find" "send-keys -X search-backward %1"
#set M-v to page the result
bind -T root M-v paste-buffer

## toggle mouse
set -g mouse off
#bind m run ~/bin/mouse_toggle
#bind m set-option -g mouse on
#bind M set-option -g mouse off
## Swap two pane

bind m command-prompt -p "Move To:" "swap-pane -t %1"
bind M command-prompt -p "From:","To:" "swap-pane -s %1 -t %2"

# enable focus-events
set -g focus-events on

# Install TPM Plugin Manager
# 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
# # Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'git@github.com/user/plugin'
# # set -g @plugin 'git@bitbucket.com/user/plugin'
#
#Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# bind b to control-h
bind b send-key C-h

# set solrized colr to dark
set -g @colors-solarized 'dark'

## pane border and colors
set-option -g pane-active-border-fg yellow
set-option -g pane-border-fg white

# -------- copy and paste through mosh --------

# tmux-256color instead of screen-256color enables italics
set -g default-terminal "tmux-256color"

# Tc enables true color
set -ag terminal-overrides ",*256col*:colors=256:Tc"

# Ms modifies OSC 52 clipboard handling to work with mosh, see
# https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b
set -ag terminal-overrides "vte*:XT:Ms=\\E]52;c;%p2%s\\7,xterm*:XT:Ms=\\E]52;c;%p2%s\\7"

# enable OSC 52 clipboard
# https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
set -g set-clipboard on

# use bracketed paste, if the running application (vim/emacs/weechat) has
# sent the terminal code to enable it.
#bind-key ] paste-buffer -p

setw -g aggressive-resize on

# http://comments.gmane.org/gmane.emacs.vim-emulation/1557
set -s escape-time 0
bind-key    -T copy-mode-vi y copy-pipe 'yank > #{pane_tty}'
